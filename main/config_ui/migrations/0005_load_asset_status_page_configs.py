# Generated by Django 4.2.13 on 2025-03-19 14:05
from django.db import migrations

from main.settings import BASE_DIR
from config_ui.services.importing.use_cases import import_in_migration
from config_ui.services.importing.import_schemes import imports_for_migration


def load_data(apps, schema_editor):
    import_in_migration(
        BASE_DIR.joinpath(
            "config_ui", "init_data", "blocks",
            "2410-17 Сonfiguration of asset status page.xlsx"),
        imports_for_migration)


def rollback_load_data(apps, schema_editor):
    clear_models = (
        apps.get_model("config_ui", "AssetPage"),
        apps.get_model("config_ui", "PagePanelLocation"),
        apps.get_model("config_ui", "PageBlockLocation"),
        apps.get_model("config_ui", "PagePanel"),
        apps.get_model("config_ui", "Page"),
        apps.get_model("config_ui", "PageType"),
        apps.get_model("config_ui", "PanelBlock"),
        apps.get_model("config_ui", "Panel"),
        apps.get_model("config_ui", "Block"),
        apps.get_model("config_ui", "BlockType"))

    try:
        # AssetPage.objects.all().delete()
        # PagePanelLocation.objects.all().delete()
        # PageBlockLocation.objects.all().delete()
        # PagePanel.objects.all().delete()
        # Page.objects.all().delete()
        # PageType.objects.all().delete()
        # PanelBlock.objects.all().delete()
        # Panel.objects.all().delete()
        # Block.objects.all().delete()
        # BlockType.objects.all().delete()
        for model in clear_models:
            model.objects.all().delete()
    except Exception as ex:
        print(
            f"Не удалось очистить таблицы "
            f"{', '.join(model.Meta.db_table for model in clear_models)}"
            f". {ex}")


class Migration(migrations.Migration):

    dependencies = [
        ('config_ui', '0004_delete_pageblock'),
    ]

    operations = [
        migrations.RunPython(load_data, rollback_load_data),
    ]
